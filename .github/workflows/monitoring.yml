name: Monitoring

on:
  schedule:
    # Exécution toutes les 30 minutes
    - cron: '*/30 * * * *'
  workflow_dispatch:
    # Permet de déclencher manuellement le workflow

jobs:
  health-check:
    runs-on: ubuntu-latest
    
    steps:
    - name: Vérification de la santé du backend
      uses: jtalk/url-health-check-action@v3
      with:
        # URL de production du backend
        url: https://gestionnaire-taches-api.herokuapp.com/health
        # Statut HTTP attendu
        follow-redirect: true
        max-attempts: 3
        # Délai entre les tentatives (en secondes)
        retry-delay: 5
        # Délai d'attente max pour la réponse (en secondes)
        retry-all: true
    
    - name: Vérification du frontend
      uses: jtalk/url-health-check-action@v3
      with:
        # URL de production du frontend
        url: https://gestionnaire-taches.netlify.app
        follow-redirect: true
        max-attempts: 3
        retry-delay: 5
        retry-all: true
    
    # Vous pourriez également ajouter des étapes pour vérifier d'autres métriques
    # comme l'utilisation des ressources, les temps de réponse, etc.
    
    - name: Notification en cas d'échec
      if: ${{ failure() }}
      # Ici, vous pourriez configurer une notification par email, Slack, etc.
      run: |
        echo "Échec des vérifications de santé ! L'application Gestionnaire de Tâches est potentiellement en panne."
        echo "Vérifiez l'état des services et les logs de production."
        # Pour activer les notifications Slack, décommentez et configurez le secret SLACK_WEBHOOK_URL
        # curl -X POST -H 'Content-type: application/json' --data "{\"text\":\"Alerte: Application Gestionnaire de Tâches en panne!\"}" ${{ secrets.SLACK_WEBHOOK_URL }}
